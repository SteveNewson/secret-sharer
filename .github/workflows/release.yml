name: Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.15.x]
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: semver_step
        name: Set version
        uses: paulhatch/semantic-version@v3.3
        with:
          # The prefix to use to identify tags
          branch: "main"
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}"
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: true
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%FT%T%z)"
      - name: Build with xgo
        uses: crazy-max/ghaction-xgo@v1
        with:
          xgo_version: latest
          go_version: ${{ matrix.go_version }}
          dest: build
          prefix: secret-sharer
          targets: windows/386,windows/amd64,linux/386,linux/amd64,darwin/386,darwin/amd64
          v: true
          x: false
          pkg: ./cmd/secret-sharer
          ldflags: -w -s -X github.com/SteveNewson/secret-sharer/internal.Version=${{ steps.semver_step.outputs.version }} -X github.com/SteveNewson/secret-sharer/internal.Build=${{ steps.date.outputs.date }} -X main.Version=${{ steps.semver_step.outputs.version }} -X main.Build=${{ steps.date.outputs.date }}
      - name: Create Release
        uses: actions/create-release@v1.0.0
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Assets
        uses: glentiki/xbin-release-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          assets_path: ./build